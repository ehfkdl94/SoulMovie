<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Movie">

<select id="selectMoiveReview" resultType="com.soulmovie.vo.ChoiceVO" parameterType="int">  <!-- 영화 상세정보 출력 -->
       SELECT RANK,CHOICE_NO, CHOICE_FREQ, CHOICE_REASON, CHOICE_CATEGORY, CHOICE_DATE, CHOICE_CODE, CHOICE_ID   
      FROM (SELECT CHOICE_NO, CHOICE_FREQ, CHOICE_REASON, CHOICE_CATEGORY, CHOICE_DATE, CHOICE_CODE, CHOICE_ID,
            ROW_NUMBER() OVER (ORDER BY CHOICE_DATE DESC) rank  
              FROM CHOICE) B
        WHERE CHOICE_CODE= #{no}  
        AND ROWNUM BETWEEN 1 AND 3
   </select>
   <select id="moviedetail" resultType="com.soulmovie.vo.MovieVO" parameterType="int">  <!-- 영화 상세정보 출력 -->
      SELECT   ABC.MOVIE_CODE, ABC.MOVIE_TITLE, ABC.MOVIE_ALTERNATIVETITLE, ABC.MOVIE_GENRE, ABC.MOVIE_ACTOR, ABC.MOVIE_CNT, ABC.MOVIE_DATE, ABC.MOVIE_IMG,
            ABC.RANK
  FROM      (SELECT 
            A.MOVIE_CODE, A.MOVIE_TITLE, A.MOVIE_ALTERNATIVETITLE, A.MOVIE_GENRE, A.MOVIE_ACTOR, A.MOVIE_CNT, A.MOVIE_DATE, A.MOVIE_IMG,
            B.RANK    
         FROM 
            MOVIE A,
            (SELECT MOVIE_CODE,ROW_NUMBER() OVER (ORDER BY MOVIE_CNT DESC ,MOVIE_TITLE ASC) RANK
            FROM MOVIE) B
         WHERE REPLACE(UPPER(TRIM(MOVIE_TITLE)),' ','') LIKE '%' || REPLACE(UPPER(TRIM('')),' ','') || '%' 
               AND b.MOVIE_CODE = A.MOVIE_CODE    
        ORDER BY RANK) ABC
WHERE MOVIE_CODE= #{no}
        
   </select>
   
   <select id="movielist" resultType="com.soulmovie.vo.MovieVO">
      SELECT MOVIE_CODE, MOVIE_TITLE, MOVIE_ALTERNATIVETITLE, MOVIE_GENRE, MOVIE_ACTOR, MOVIE_CNT, MOVIE_DATE, MOVIE_IMG,B.RANK 
      FROM
         (SELECT 
            MOVIE_CODE, MOVIE_TITLE, MOVIE_ALTERNATIVETITLE, MOVIE_GENRE, MOVIE_ACTOR, MOVIE_CNT, MOVIE_DATE, MOVIE_IMG,
            ROW_NUMBER() OVER (ORDER BY MOVIE_CNT DESC) RANK    
         FROM 
            MOVIE ) B
      WHERE RANK BETWEEN 1 AND 6
   </select>
   
      <select id="moviepagelistText" resultType="com.soulmovie.vo.MovieVO" parameterType="map">
     
    
    select *
from (SELECT MOVIE_CODE, MOVIE_TITLE, MOVIE_ALTERNATIVETITLE, MOVIE_GENRE, MOVIE_ACTOR, MOVIE_CNT, MOVIE_DATE, MOVIE_IMG,B.RANK 
      FROM
         (SELECT 
            MOVIE_CODE, MOVIE_TITLE, MOVIE_ALTERNATIVETITLE, MOVIE_GENRE, MOVIE_ACTOR, MOVIE_CNT, MOVIE_DATE, MOVIE_IMG,
            ROW_NUMBER() OVER (ORDER BY MOVIE_CNT DESC) RANK    
         FROM 
            MOVIE
         WHERE UPPER(TRIM(MOVIE_TITLE)) LIKE '%' || '' || '%' ) B)
         WHERE UPPER(TRIM(MOVIE_TITLE)) LIKE '%' || UPPER(TRIM(#{text})) || '%' AND
          RANK BETWEEN #{start} AND #{end} 
           
   </select>
   <select id="moviepagelistGenre" resultType="com.soulmovie.vo.MovieVO" parameterType="map">
      SELECT MOVIE_CODE, MOVIE_TITLE, MOVIE_ALTERNATIVETITLE, MOVIE_GENRE, MOVIE_ACTOR, MOVIE_CNT, MOVIE_DATE, MOVIE_IMG,B.RANK 
      FROM
         (SELECT 
            MOVIE_CODE, MOVIE_TITLE, MOVIE_ALTERNATIVETITLE, MOVIE_GENRE, MOVIE_ACTOR, MOVIE_CNT, MOVIE_DATE, MOVIE_IMG,
            ROW_NUMBER() OVER (ORDER BY MOVIE_CNT DESC) RANK    
         FROM 
            MOVIE) B
         WHERE RANK BETWEEN #{start} AND #{end} 
            AND B.MOVIE_GENRE LIKE '%' || UPPER(TRIM(#{text})) || '%' 
           
   </select>
   
   <select id="movielist1" resultType="com.soulmovie.vo.MovieVO" parameterType="map">
		SELECT   ABC.MOVIE_CODE, ABC.MOVIE_TITLE, ABC.MOVIE_ALTERNATIVETITLE, ABC.MOVIE_GENRE, ABC.MOVIE_ACTOR, ABC.MOVIE_CNT, ABC.MOVIE_DATE, ABC.MOVIE_IMG,
            ABC.RANK
  FROM      (SELECT 
            A.MOVIE_CODE, A.MOVIE_TITLE, A.MOVIE_ALTERNATIVETITLE, A.MOVIE_GENRE, A.MOVIE_ACTOR, A.MOVIE_CNT, A.MOVIE_DATE, A.MOVIE_IMG,
            B.RANK    
         FROM 
            MOVIE A,
            (SELECT MOVIE_CODE,ROW_NUMBER() OVER (ORDER BY MOVIE_CNT DESC ,MOVIE_TITLE ASC) RANK
            FROM MOVIE) B
         WHERE REPLACE(UPPER(TRIM(MOVIE_TITLE)),' ','') LIKE '%' || REPLACE(UPPER(TRIM(#{text})),' ','') || '%' 
               AND b.MOVIE_CODE = A.MOVIE_CODE    
        ORDER BY RANK) ABC
WHERE ABC.RANK BETWEEN #{start} AND #{end}

   </select>
   <select id="movielist2" resultType="com.soulmovie.vo.MovieVO" parameterType="map">
		SELECT *
FROM   (SELECT   ABC.MOVIE_CODE, ABC.MOVIE_TITLE, ABC.MOVIE_ALTERNATIVETITLE, ABC.MOVIE_GENRE, ABC.MOVIE_ACTOR, ABC.MOVIE_CNT, ABC.MOVIE_DATE, ABC.MOVIE_IMG,
            ABC.RANK,ROWNUM rown
         FROM      (SELECT 
            A.MOVIE_CODE, A.MOVIE_TITLE, A.MOVIE_ALTERNATIVETITLE, A.MOVIE_GENRE, A.MOVIE_ACTOR, A.MOVIE_CNT, A.MOVIE_DATE, A.MOVIE_IMG,
            B.RANK,ROWNUM rown    
                 FROM 
                        MOVIE A,
                 (SELECT MOVIE_CODE,ROW_NUMBER() OVER (ORDER BY MOVIE_CNT DESC ,MOVIE_TITLE ASC) RANK
                             FROM MOVIE) B
                    WHERE REPLACE(UPPER(TRIM(MOVIE_TITLE)),' ','') LIKE '%' || REPLACE(UPPER(TRIM(#{text})),' ','') || '%' 
                      AND b.MOVIE_CODE = A.MOVIE_CODE    
                     ORDER BY RANK) ABC) ABCD
WHERE ABCD.rown BETWEEN #{start} and #{end}

   </select>

   <select id="moviecontent" resultType="com.soulmovie.vo.MovieVO" parameterType="int">
      SELECT * FROM MOVIE WHERE MOVIE_CODE=#{no}
   </select>
   <select id="count" resultType="int" parameterType="String">
      SELECT COUNT(*) FROM MOVIE WHERE MOVIE_TITLE LIKE '%' || #{text} || '%' 
   </select>
   
      <delete id="deleteMovie" parameterType="com.soulmovie.vo.MovieVO">
      DELETE FROM MOVIE WHERE MOVIE_CODE = #{movie_code} 
   </delete>
   
   <select id="moviecount" resultType="int" parameterType="String">
      SELECT COUNT(*) FROM MOVIE
   </select>
   <select id ="moviefreq" resultType="com.soulmovie.vo.ChoiceVO" parameterType="int">
   SELECT NVL(sum(CHOICE.CHOICE_FREQ),0) CHOICE_FREQ ,count(CHOICE.CHOICE_FREQ)
   FROM MOVIE, CHOICE 
   WHERE MOVIE.MOVIE_CODE = #{no} AND
     MOVIE.MOVIE_CODE =CHOICE.CHOICE_CODE
   </select>
</mapper>